#!/bin/bash
set -e

PROJECT_ID=$(gcloud config get-value project)
REGISTRY_LOCATION="us-central1"  # adjust based on your artifact registry location
REGISTRY="$REGISTRY_LOCATION-docker.pkg.dev/$PROJECT_ID/container-image-repository"

# 1. Build images using Dockerfile method
echo "Building ODP images using Dockerfile..."
pushd ../../odp-federatedcompute

# Build base image first (assuming this is specified in BUILDING.md)
docker build -t odp-base -f Dockerfile.base .

# Build service images
services=("aggregator" "collector" "model-updater" "task-assignment" "task-management" "task-scheduler")

for service in "${services[@]}"; do
    echo "Building $service..."
    # Convert service name to image variable name (e.g., "model-updater" to "model_updater_image")
    image_var=$(echo ${service} | tr - _)"_image"
    
    # Build and tag image
    docker build -t "$REGISTRY/$service:latest" \
        --build-arg SERVICE=$service \
        -f Dockerfile .
    
    # Push to registry
    docker push "$REGISTRY/$service:latest"
    
    # Get digest for immutable reference
    digest=$(docker inspect --format='{{index .RepoDigests 0}}' "$REGISTRY/$service:latest" | cut -d'@' -f2)
    
    # Store the full image reference for tfvars
    image_refs[$image_var]="$REGISTRY/$service@$digest"
done

# Generate terraform.tfvars with the built image references
echo "Generating terraform.tfvars..."
{
    echo "# Auto-generated by deploy.sh"
    for var in "${!image_refs[@]}"; do
        echo "$var = \"${image_refs[$var]}\""
    done
} > ../federated-learning/terraform/terraform.tfvars

popd

echo "Image references have been written to terraform.tfvars"
echo "You can now run: terraform apply" 