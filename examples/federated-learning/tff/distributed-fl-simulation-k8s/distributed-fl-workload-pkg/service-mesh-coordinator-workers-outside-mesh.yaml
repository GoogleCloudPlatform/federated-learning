# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: tff-worker-1
  namespace: ns  # kpt-set: ${namespace}
  labels:
    # Show this service and its telemetry in the Anthos Service Mesh page of the Google Cloud console
    service.istio.io/canonical-name: tff-worker-1
spec:
  hosts:
    - tff-worker-1.example.com  # kpt-set: ${tff-worker-1-hostname}
  ports:
    - number: 8000
      name: grpc
      protocol: GRPC
  resolution: DNS
  location: MESH_EXTERNAL
...
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: tff-worker-2
  namespace: ns  # kpt-set: ${namespace}
  labels:
    # Show this service and its telemetry in the Anthos Service Mesh page of the Google Cloud console
    service.istio.io/canonical-name: tff-worker-2
spec:
  hosts:
    - tff-worker-2.example.com  # kpt-set: ${tff-worker-2-hostname}
  ports:
    - number: 8000
      name: grpc
      protocol: GRPC
  resolution: DNS
  location: MESH_EXTERNAL
...
# ---
# # Direct traffic from the sidecars to the egress gateway and from the egress gateway to the external service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: distributed-tff-example-worker-1-through-egress-gateway
  namespace: ns  # kpt-set: ${namespace}
spec:
  hosts:
    - tff-worker-1.example.com  # kpt-set: ${tff-worker-1-hostname}
  gateways:
    - istio-egress/egress-gateway
    - mesh
  http:
    - match:
        - gateways:
            - mesh
          port: 8000
      route:
        - destination:
            host: egress-gateway.istio-egress.svc.cluster.local
            port:
              number: 80
          weight: 100
    - match:
        - gateways:
            - istio-egress/egress-gateway
          port: 80
      route:
        - destination:
            host: tff-worker-1.example.com  # kpt-set: ${tff-worker-1-hostname}
            port:
              number: 8000
          weight: 100
...
# ---
# # Direct traffic from the sidecars to the egress gateway and from the egress gateway to the external service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: distributed-tff-example-worker-2-through-egress-gateway
  namespace: ns  # kpt-set: ${namespace}
spec:
  hosts:
    - tff-worker-2.example.com  # kpt-set: ${tff-worker-2-hostname}
  gateways:
    - istio-egress/egress-gateway
    - mesh
  http:
    - match:
        - gateways:
            - mesh
          port: 8000
      route:
        - destination:
            host: egress-gateway.istio-egress.svc.cluster.local
            port:
              number: 80
          weight: 100
    - match:
        - gateways:
            - istio-egress/egress-gateway
          port: 80
      route:
        - destination:
            host: tff-worker-2.example.com  # kpt-set: ${tff-worker-2-hostname}
            port:
              number: 8000
          weight: 100
...
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-egress-from-ns-to-workers-and-egress-gateway  # kpt-set: allow-egress-from-${namespace}-to-workers-and-egress-gateway
  namespace: istio-egress
spec:
  action: ALLOW
  rules:
    - from:
        - source:
            namespaces:
              - ns  # kpt-set: ${namespace}
      to:
        - operation:
            hosts:
              - egress-gateway.istio-egress.svc.cluster.local
              - tff-worker-1.example.com  # kpt-set: ${tff-worker-1-hostname}
              - tff-worker-2.example.com  # kpt-set: ${tff-worker-2-hostname}
      when:
        - key: destination.port
          values: ["8000"]
...
